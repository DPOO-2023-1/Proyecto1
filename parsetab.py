
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AROUND ASSINGTO BACK BALLOONS CANJUMPINDIR CANJUMPTOTHE CANMOVEINDIR CANMOVETOTHE CANPICK CANPUT CHIPS COMA CORCHD CORCHI DO DPUNTOS EAST ELSE FACE FACING FRONT GOTO IF INT JUMPINDIR JUMPTOTHE LEFT LINEA MOVE MOVEINDIR MOVETOTHE NAME NOP NORTH NOT PCOMA PICK PROCS PUT REPEAT RIGHT ROBOT_R SOUTH THEN TURN VARS WEST WHILE control_structure procedure_callprogram : ROBOT_R VARS var_list PROCS proc_def instruction_block\n                | ROBOT_R PROCS proc_def instruction_block\n                | ROBOT_R VARS instruction_block\n                | ROBOT_R instruction_block\n                | ROBOT_R PROCS\n                | ROBOT_R VARS\n                | ROBOT_R\n                | emptyvar_list : NAME var_list_tail\n                | NAMEvar_list_tail : COMA NAME var_list_tail PCOMA\n                     | COMA NAME PCOMAproc_def : NAME CORCHI parameters CORCHD instruction_block\n                | NAME CORCHI parameters CORCHD instruction_block proc_def parameters : LINEA NAME parameters_tail LINEA\n                  | LINEA NAME LINEA\n    parameters_tail : COMA NAME parameters_tail\n                       | COMA NAME\n    instruction_block : CORCHI instructions CORCHD\n                         | CORCHI CORCHD\n    instructions : instruction instructions\n                    | instruction\n    instruction : assignTo\n                  | goto\n                  | move\n                  | turn\n                  | face\n                  | put\n                  | pick\n                  | moveToThe\n                  | moveInDir\n                  | jumpToThe\n                  | jumpInDir\n                  | NOP\n                  | procedure_call\n                  | control_structure\n    assignTo : ASSINGTO PCOMA NAME COMA INTgoto : GOTO DPUNTOS INT COMA INTmove : MOVE DPUNTOS INTturn : TURN DPUNTOS LEFT\n           | TURN DPUNTOS RIGHT\n           | TURN DPUNTOS AROUND\n    face : FACE DPUNTOS NORTH\n           | FACE DPUNTOS SOUTH\n           | FACE DPUNTOS EAST\n           | FACE DPUNTOS WEST\n    put : PUT DPUNTOS INT COMA BALLOONS\n          | PUT DPUNTOS INT COMA CHIPS\n    pick : PICK DPUNTOS INT COMA BALLOONS\n           | PICK DPUNTOS INT COMA CHIPS\n    moveToThe : MOVETOTHE DPUNTOS INT COMA FRONT\n                | MOVETOTHE DPUNTOS INT COMA LEFT\n                | MOVETOTHE DPUNTOS INT COMA RIGHT\n                | MOVETOTHE DPUNTOS INT COMA BACK\n    moveInDir : MOVEINDIR DPUNTOS INT COMA NORTH\n                 | MOVEINDIR DPUNTOS INT COMA SOUTH\n                 | MOVEINDIR DPUNTOS INT COMA EAST\n                 | MOVEINDIR DPUNTOS INT COMA WEST\n    jumpToThe : JUMPTOTHE DPUNTOS INT COMA FRONT\n                | JUMPTOTHE DPUNTOS INT COMA LEFT\n                | JUMPTOTHE DPUNTOS INT COMA RIGHT\n                | JUMPTOTHE DPUNTOS INT COMA BACK\n    jumpInDir : JUMPINDIR DPUNTOS INT COMA NORTH\n                 | JUMPINDIR DPUNTOS INT COMA SOUTH\n                 | JUMPINDIR DPUNTOS INT COMA EAST\n                 | JUMPINDIR DPUNTOS INT COMA WEST\n    instruction : NAME DPUNTOS argsinstruction : IF DPUNTOS condition THEN DPUNTOS instructions ELSE DPUNTOS instructions\n                   | WHILE DPUNTOS condition DO DPUNTOS instructions\n                   | REPEAT DPUNTOS args DPUNTOS instructionscondition : FACING NAME\n                 | CANPUT args COMA NAME\n                 | CANPICK args COMA NAME\n                 | CANMOVEINDIR args COMA NAME\n                 | CANJUMPINDIR args COMA NAME\n                 | CANMOVETOTHE args COMA NAME\n                 | CANJUMPTOTHE args COMA NAME\n                 | NOT conditionargs : arg\n            | arg COMA argsarg : NAME\n           | INT\n\n    empty : \n\n    '
    
_lr_action_items = {'ROBOT_R':([0,],[2,]),'$end':([0,1,2,3,4,5,6,9,14,48,50,102,],[-83,0,-7,-8,-6,-5,-4,-3,-20,-2,-19,-1,]),'VARS':([2,],[4,]),'PROCS':([2,8,10,46,104,127,],[5,45,-10,-9,-12,-11,]),'CORCHI':([2,4,11,12,14,50,67,105,128,164,],[7,7,7,49,-20,-19,7,7,-13,-14,]),'NAME':([4,5,7,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,45,47,50,51,52,55,56,70,71,72,73,74,76,77,78,79,80,81,82,88,89,90,91,92,93,94,95,107,118,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[10,12,30,-20,30,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,12,68,-19,-21,71,71,86,106,-81,-67,-79,-82,109,71,71,71,71,71,71,-39,-40,-41,-42,-43,-44,-45,-46,71,30,12,166,-80,30,168,169,170,171,172,173,30,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,30,-68,]),'CORCHD':([7,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,69,71,72,73,74,88,89,90,91,92,93,94,95,129,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,174,178,],[14,50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,105,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,-16,-80,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-15,-69,-68,]),'NOP':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[27,27,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,27,-80,27,27,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,27,-68,]),'procedure_call':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[28,28,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,28,-80,28,28,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,28,-68,]),'control_structure':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[29,29,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,29,-80,29,29,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,29,-68,]),'IF':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[31,31,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,31,-80,31,31,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,31,-68,]),'WHILE':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[32,32,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,32,-80,32,32,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,32,-68,]),'REPEAT':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[33,33,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,33,-80,33,33,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,33,-68,]),'ASSINGTO':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[34,34,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,34,-80,34,34,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,34,-68,]),'GOTO':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[35,35,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,35,-80,35,35,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,35,-68,]),'MOVE':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[36,36,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,36,-80,36,36,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,36,-68,]),'TURN':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[37,37,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,37,-80,37,37,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,37,-68,]),'FACE':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[38,38,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,38,-80,38,38,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,38,-68,]),'PUT':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[39,39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,39,-80,39,39,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,39,-68,]),'PICK':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[40,40,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,40,-80,40,40,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,40,-68,]),'MOVETOTHE':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[41,41,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,41,-80,41,41,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,41,-68,]),'MOVEINDIR':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[42,42,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,42,-80,42,42,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,42,-68,]),'JUMPTOTHE':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[43,43,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,43,-80,43,43,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,43,-68,]),'JUMPINDIR':([7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,118,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,177,178,],[44,44,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,44,-80,44,44,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,44,-68,]),'COMA':([10,68,71,73,74,86,87,96,97,98,99,100,101,106,110,111,112,113,114,115,132,166,],[47,47,-81,107,-82,119,120,121,122,123,124,125,126,131,134,135,136,137,138,139,-80,131,]),'ELSE':([15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,51,71,72,73,74,88,89,90,91,92,93,94,95,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,178,],[-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-81,-67,-79,-82,-39,-40,-41,-42,-43,-44,-45,-46,-80,-70,-37,-38,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,176,-69,-68,]),'DPUNTOS':([30,31,32,33,35,36,37,38,39,40,41,42,43,44,71,73,74,85,108,117,132,176,],[52,53,54,55,57,58,59,60,61,62,63,64,65,66,-81,-79,-82,118,133,140,-80,177,]),'PCOMA':([34,68,103,104,127,],[56,104,127,-12,-11,]),'LINEA':([49,106,130,166,175,],[70,129,165,-18,-17,]),'INT':([52,55,57,58,61,62,63,64,65,66,77,78,79,80,81,82,107,119,120,],[74,74,87,88,96,97,98,99,100,101,74,74,74,74,74,74,74,142,143,]),'FACING':([53,54,83,],[76,76,76,]),'CANPUT':([53,54,83,],[77,77,77,]),'CANPICK':([53,54,83,],[78,78,78,]),'CANMOVEINDIR':([53,54,83,],[79,79,79,]),'CANJUMPINDIR':([53,54,83,],[80,80,80,]),'CANMOVETOTHE':([53,54,83,],[81,81,81,]),'CANJUMPTOTHE':([53,54,83,],[82,82,82,]),'NOT':([53,54,83,],[83,83,83,]),'LEFT':([59,123,125,],[89,149,157,]),'RIGHT':([59,123,125,],[90,150,158,]),'AROUND':([59,],[91,]),'NORTH':([60,124,126,],[92,152,160,]),'SOUTH':([60,124,126,],[93,153,161,]),'EAST':([60,124,126,],[94,154,162,]),'WEST':([60,124,126,],[95,155,163,]),'THEN':([75,109,116,168,169,170,171,172,173,],[108,-71,-78,-72,-73,-74,-75,-76,-77,]),'DO':([84,109,116,168,169,170,171,172,173,],[117,-71,-78,-72,-73,-74,-75,-76,-77,]),'BALLOONS':([121,122,],[144,146,]),'CHIPS':([121,122,],[145,147,]),'FRONT':([123,125,],[148,156,]),'BACK':([123,125,],[151,159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'empty':([0,],[3,]),'instruction_block':([2,4,11,67,105,],[6,9,48,102,128,]),'var_list':([4,],[8,]),'proc_def':([5,45,128,],[11,67,164,]),'instructions':([7,15,118,133,140,177,],[13,51,141,167,174,178,]),'instruction':([7,15,118,133,140,177,],[15,15,15,15,15,15,]),'assignTo':([7,15,118,133,140,177,],[16,16,16,16,16,16,]),'goto':([7,15,118,133,140,177,],[17,17,17,17,17,17,]),'move':([7,15,118,133,140,177,],[18,18,18,18,18,18,]),'turn':([7,15,118,133,140,177,],[19,19,19,19,19,19,]),'face':([7,15,118,133,140,177,],[20,20,20,20,20,20,]),'put':([7,15,118,133,140,177,],[21,21,21,21,21,21,]),'pick':([7,15,118,133,140,177,],[22,22,22,22,22,22,]),'moveToThe':([7,15,118,133,140,177,],[23,23,23,23,23,23,]),'moveInDir':([7,15,118,133,140,177,],[24,24,24,24,24,24,]),'jumpToThe':([7,15,118,133,140,177,],[25,25,25,25,25,25,]),'jumpInDir':([7,15,118,133,140,177,],[26,26,26,26,26,26,]),'var_list_tail':([10,68,],[46,103,]),'parameters':([49,],[69,]),'args':([52,55,77,78,79,80,81,82,107,],[72,85,110,111,112,113,114,115,132,]),'arg':([52,55,77,78,79,80,81,82,107,],[73,73,73,73,73,73,73,73,73,]),'condition':([53,54,83,],[75,84,116,]),'parameters_tail':([106,166,],[130,175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> ROBOT_R VARS var_list PROCS proc_def instruction_block','program',6,'p_program','model.py',186),
  ('program -> ROBOT_R PROCS proc_def instruction_block','program',4,'p_program','model.py',187),
  ('program -> ROBOT_R VARS instruction_block','program',3,'p_program','model.py',188),
  ('program -> ROBOT_R instruction_block','program',2,'p_program','model.py',189),
  ('program -> ROBOT_R PROCS','program',2,'p_program','model.py',190),
  ('program -> ROBOT_R VARS','program',2,'p_program','model.py',191),
  ('program -> ROBOT_R','program',1,'p_program','model.py',192),
  ('program -> empty','program',1,'p_program','model.py',193),
  ('var_list -> NAME var_list_tail','var_list',2,'p_var_list','model.py',206),
  ('var_list -> NAME','var_list',1,'p_var_list','model.py',207),
  ('var_list_tail -> COMA NAME var_list_tail PCOMA','var_list_tail',4,'p_var_list_tail','model.py',214),
  ('var_list_tail -> COMA NAME PCOMA','var_list_tail',3,'p_var_list_tail','model.py',215),
  ('proc_def -> NAME CORCHI parameters CORCHD instruction_block','proc_def',5,'p_proc_def','model.py',222),
  ('proc_def -> NAME CORCHI parameters CORCHD instruction_block proc_def','proc_def',6,'p_proc_def','model.py',223),
  ('parameters -> LINEA NAME parameters_tail LINEA','parameters',4,'p_parameters','model.py',231),
  ('parameters -> LINEA NAME LINEA','parameters',3,'p_parameters','model.py',232),
  ('parameters_tail -> COMA NAME parameters_tail','parameters_tail',3,'p_parameters_tail','model.py',241),
  ('parameters_tail -> COMA NAME','parameters_tail',2,'p_parameters_tail','model.py',242),
  ('instruction_block -> CORCHI instructions CORCHD','instruction_block',3,'p_instruction_block','model.py',250),
  ('instruction_block -> CORCHI CORCHD','instruction_block',2,'p_instruction_block','model.py',251),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','model.py',259),
  ('instructions -> instruction','instructions',1,'p_instructions','model.py',260),
  ('instruction -> assignTo','instruction',1,'p_instruction','model.py',268),
  ('instruction -> goto','instruction',1,'p_instruction','model.py',269),
  ('instruction -> move','instruction',1,'p_instruction','model.py',270),
  ('instruction -> turn','instruction',1,'p_instruction','model.py',271),
  ('instruction -> face','instruction',1,'p_instruction','model.py',272),
  ('instruction -> put','instruction',1,'p_instruction','model.py',273),
  ('instruction -> pick','instruction',1,'p_instruction','model.py',274),
  ('instruction -> moveToThe','instruction',1,'p_instruction','model.py',275),
  ('instruction -> moveInDir','instruction',1,'p_instruction','model.py',276),
  ('instruction -> jumpToThe','instruction',1,'p_instruction','model.py',277),
  ('instruction -> jumpInDir','instruction',1,'p_instruction','model.py',278),
  ('instruction -> NOP','instruction',1,'p_instruction','model.py',279),
  ('instruction -> procedure_call','instruction',1,'p_instruction','model.py',280),
  ('instruction -> control_structure','instruction',1,'p_instruction','model.py',281),
  ('assignTo -> ASSINGTO PCOMA NAME COMA INT','assignTo',5,'p_assignTo','model.py',286),
  ('goto -> GOTO DPUNTOS INT COMA INT','goto',5,'p_goto','model.py',290),
  ('move -> MOVE DPUNTOS INT','move',3,'p_move','model.py',294),
  ('turn -> TURN DPUNTOS LEFT','turn',3,'p_turn','model.py',298),
  ('turn -> TURN DPUNTOS RIGHT','turn',3,'p_turn','model.py',299),
  ('turn -> TURN DPUNTOS AROUND','turn',3,'p_turn','model.py',300),
  ('face -> FACE DPUNTOS NORTH','face',3,'p_face','model.py',306),
  ('face -> FACE DPUNTOS SOUTH','face',3,'p_face','model.py',307),
  ('face -> FACE DPUNTOS EAST','face',3,'p_face','model.py',308),
  ('face -> FACE DPUNTOS WEST','face',3,'p_face','model.py',309),
  ('put -> PUT DPUNTOS INT COMA BALLOONS','put',5,'p_put','model.py',314),
  ('put -> PUT DPUNTOS INT COMA CHIPS','put',5,'p_put','model.py',315),
  ('pick -> PICK DPUNTOS INT COMA BALLOONS','pick',5,'p_pick','model.py',320),
  ('pick -> PICK DPUNTOS INT COMA CHIPS','pick',5,'p_pick','model.py',321),
  ('moveToThe -> MOVETOTHE DPUNTOS INT COMA FRONT','moveToThe',5,'p_moveToThe','model.py',326),
  ('moveToThe -> MOVETOTHE DPUNTOS INT COMA LEFT','moveToThe',5,'p_moveToThe','model.py',327),
  ('moveToThe -> MOVETOTHE DPUNTOS INT COMA RIGHT','moveToThe',5,'p_moveToThe','model.py',328),
  ('moveToThe -> MOVETOTHE DPUNTOS INT COMA BACK','moveToThe',5,'p_moveToThe','model.py',329),
  ('moveInDir -> MOVEINDIR DPUNTOS INT COMA NORTH','moveInDir',5,'p_moveInDir','model.py',334),
  ('moveInDir -> MOVEINDIR DPUNTOS INT COMA SOUTH','moveInDir',5,'p_moveInDir','model.py',335),
  ('moveInDir -> MOVEINDIR DPUNTOS INT COMA EAST','moveInDir',5,'p_moveInDir','model.py',336),
  ('moveInDir -> MOVEINDIR DPUNTOS INT COMA WEST','moveInDir',5,'p_moveInDir','model.py',337),
  ('jumpToThe -> JUMPTOTHE DPUNTOS INT COMA FRONT','jumpToThe',5,'p_jumpToThe','model.py',342),
  ('jumpToThe -> JUMPTOTHE DPUNTOS INT COMA LEFT','jumpToThe',5,'p_jumpToThe','model.py',343),
  ('jumpToThe -> JUMPTOTHE DPUNTOS INT COMA RIGHT','jumpToThe',5,'p_jumpToThe','model.py',344),
  ('jumpToThe -> JUMPTOTHE DPUNTOS INT COMA BACK','jumpToThe',5,'p_jumpToThe','model.py',345),
  ('jumpInDir -> JUMPINDIR DPUNTOS INT COMA NORTH','jumpInDir',5,'p_jumpInDir','model.py',350),
  ('jumpInDir -> JUMPINDIR DPUNTOS INT COMA SOUTH','jumpInDir',5,'p_jumpInDir','model.py',351),
  ('jumpInDir -> JUMPINDIR DPUNTOS INT COMA EAST','jumpInDir',5,'p_jumpInDir','model.py',352),
  ('jumpInDir -> JUMPINDIR DPUNTOS INT COMA WEST','jumpInDir',5,'p_jumpInDir','model.py',353),
  ('instruction -> NAME DPUNTOS args','instruction',3,'p_proccall','model.py',358),
  ('instruction -> IF DPUNTOS condition THEN DPUNTOS instructions ELSE DPUNTOS instructions','instruction',9,'p_controlstructure','model.py',362),
  ('instruction -> WHILE DPUNTOS condition DO DPUNTOS instructions','instruction',6,'p_controlstructure','model.py',363),
  ('instruction -> REPEAT DPUNTOS args DPUNTOS instructions','instruction',5,'p_controlstructure','model.py',364),
  ('condition -> FACING NAME','condition',2,'p_condition','model.py',373),
  ('condition -> CANPUT args COMA NAME','condition',4,'p_condition','model.py',374),
  ('condition -> CANPICK args COMA NAME','condition',4,'p_condition','model.py',375),
  ('condition -> CANMOVEINDIR args COMA NAME','condition',4,'p_condition','model.py',376),
  ('condition -> CANJUMPINDIR args COMA NAME','condition',4,'p_condition','model.py',377),
  ('condition -> CANMOVETOTHE args COMA NAME','condition',4,'p_condition','model.py',378),
  ('condition -> CANJUMPTOTHE args COMA NAME','condition',4,'p_condition','model.py',379),
  ('condition -> NOT condition','condition',2,'p_condition','model.py',380),
  ('args -> arg','args',1,'p_args','model.py',399),
  ('args -> arg COMA args','args',3,'p_args','model.py',400),
  ('arg -> NAME','arg',1,'p_arg','model.py',407),
  ('arg -> INT','arg',1,'p_arg','model.py',408),
  ('empty -> <empty>','empty',0,'p_empty','model.py',417),
]
